\
1. Use the "each" method of Array to iterate over [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], and print out each value.\

arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
arr.each {|a| puts a}

\
2. Same as above, but only print out values greater than 5.\
\

arr.each {|a| puts a if a > 5}

3. Now, using the same array from #2, use the "select" method to extract all odd numbers into a new array.\
\

arr.select {|a| a.odd?}

4. Append "11" to the end of the array. Prepend "0" to the beginning.\
\

arr << 11
arr.unshift(0)

5. Get rid of "11". And append a "3".\
\

arr.pop
arr << 3

6. Get rid of duplicates without specifically removing any one value. \
\

arr.uniq!

7. What's the major difference between an Array and a Hash?\
\

Arrays are ordered and Hashes are not.  Also Hashes have key pair values and the keys are always unique.

8. Create a Hash using both Ruby 1.8 and 1.9 syntax.\
\

h = {key: "value"}
h = {:key => "value"}

Suppose you have a h = \{a:1, b:2, c:3, d:4\}\
\
9. Get the value of key "b".\
\

No value because "b" is a string and not a key.

10. Add to this hash the key:value pair \{e:5\}\
\

h [:e] = 5

13. Remove all key:value pairs whose value is less than 3.5\
\

h.delete_if {|k, v| v <3.5}

14. Can hash values be arrays? Can you have an array of hashes? (give examples)\
\

Yes.  h

15. Look at several Rails/Ruby online API sources and say which one your like best and why.\

http://api.rubyonrails.org because I like the layout and ease of use.

}